# Development override for docker-compose.yml
# This file automatically extends docker-compose.yml when using docker-compose commands
# Use this for local development without building the full application

services:
  # Override web-app to not start automatically in development
  web-app:
    profiles:
      - production

  # PostgreSQL Database - Development settings (simplified)
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=enterprise_db
      - POSTGRES_USER=enterprise
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-enterprise_secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U enterprise -d enterprise_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache - Development settings
  redis:
    image: redis:7.4-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-devpassword}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-devpassword}
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # Add resource limits for development
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Override fastify-api to not start automatically in development
  fastify-api:
    profiles:
      - production

  # Override Kafka services to not start automatically in development
  zookeeper:
    profiles:
      - kafka

  kafka:
    profiles:
      - kafka

  kafka-ui:
    profiles:
      - kafka

  pgadmin:
    profiles:
      - tools

# Development volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Development network
networks:
  default:
    name: enterprise-dev-network
    driver: bridge
